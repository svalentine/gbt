declare -A GBT__SYMBOLS
GBT__SYMBOLS[amzn]='\001\e[38;5;208m\002'
GBT__SYMBOLS[arch]='\001\e[38;5;25m\002'
GBT__SYMBOLS[archarm]='\001\e[38;5;125m\002'
GBT__SYMBOLS[centos]='\001\e[38;5;27m\002'
GBT__SYMBOLS[coreos]='\001\e[38;5;15m\002'
GBT__SYMBOLS[darwin]='\001\e[38;5;15m\002'
GBT__SYMBOLS[debian]='\001\e[38;5;88m\002'
GBT__SYMBOLS[docker]='\001\e[38;5;26m\002'
GBT__SYMBOLS[elementary]='\001\e[38;5;33m\002'
GBT__SYMBOLS[fedora]='\001\e[38;5;32m\002'
GBT__SYMBOLS[freebsd]='\001\e[38;5;1m\002'
GBT__SYMBOLS[gentoo]='\001\e[38;5;62m\002'
GBT__SYMBOLS[linux]='\001\e[38;5;15m\002'
GBT__SYMBOLS[linuxmint]='\001\e[38;5;47m\002'
GBT__SYMBOLS[mageia]='\001\e[38;5;24m\002'
GBT__SYMBOLS[mandriva]='\001\e[38;5;208m\002'
GBT__SYMBOLS[opensuse]='\001\e[38;5;113m\002'
GBT__SYMBOLS[raspbian]='\001\e[38;5;125m\002'
GBT__SYMBOLS[redhat]='\001\e[38;5;1m\002'
GBT__SYMBOLS[sabayon]='\001\e[38;5;15m\002'
GBT__SYMBOLS[slackware]='\001\e[38;5;15m\002'
GBT__SYMBOLS[ubuntu]='\001\e[38;5;166m\002'

function gbt__get_os() {
    local ret

    if [[ ! $(cat /proc/1/sched | head -n 1 | egrep '(init|systemd)') ]]; then
        ret='docker'
    elif [ "$(uname -s)" = 'Linux' ]; then
        source /etc/os-release
        ret="$ID"
    else
        ret=$(uname -s)
    fi

    echo $ret | tr '[:upper:]' '[:lower:]'
}

export GBT__OS=${GBT__SYMBOLS[$(gbt__get_os)]}

# Change the Sign depending on the user
if [ "$UID" = '0' ]; then
    export GBT__SIGN='\001\x1b[38;5;1m\002#'
    export GBT__USER="\001\x1b[38;5;9m\002"
else
    export GBT__SIGN='\001\x1b[38;5;10m\002$'
    export GBT__USER="\001\x1b[38;5;11m\002"
fi

function sudo() {
    # Search for the sudo command
    if [ -e /usr/bin/sudo ]; then
        local SUDO='/usr/bin/sudo'
    elif [ -e /bin/sudo ]; then
        local SUDO='/bin/sudo'
    else
        echo 'Cannot find sudo.'
        return
    fi

    local MYARGS=''

    if [ "$1" = 'su' ]; then
        I=0

        for N in $@; do
            # Strip out the "su" from the list of arguments
            if [ "$I" = 0 ]; then
                I=1
            else
                MYARGS="$MYARGS $N"
            fi
        done
    elif [ "${1:0:1}" = '-' ]; then
        MYARGS="$@"
    fi

    if [ -n "$1" ] && [ "$1" != 'su' ] && [ "$MYARGS" = '' ]; then
        $SUDO $@
    else
        # Run modified sudo command to load the tmp file
        $SUDO su -c "bash --rcfile $GBT__CONF" $MYARGS
    fi
}

function ssh() {
    /usr/bin/ssh -t $@ "
        cat /etc/motd 2>/dev/null;
        echo \"$(base64 $GBT__CONF | tr -d '\r\n')\" | base64 -d > $GBT__CONF &&
        bash --rcfile $GBT__CONF;
        rm -f $GBT__CONF"
}

function docker() {
    if [ "$1" != 'shell' ]; then
        /usr/bin/docker $@
    else
        local GBT__CONTAINER_ID="$2"

        /usr/bin/docker cp $GBT__CONF $GBT__CONTAINER_ID:$(dirname $GBT__CONF)
        /usr/bin/docker exec -it $GBT__CONTAINER_ID /bin/bash --rcfile $GBT__CONF
    fi
}

