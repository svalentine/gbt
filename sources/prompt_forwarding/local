# Customize 'which' option for ZSH
[ ${SHELL##*/} = 'zsh' ] && export GBT__WHICH_OPTS='-p'

function gbt__err() {
    echo "$@" >&2
}

function gbt__local_rcfile() {
    [ -z "$GBT__HOME$GBT__PROFILE" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__HOME$GBT__THEME" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__PROFILE" ] && GBT__PROFILE="$GBT__HOME/sources/prompt_forwarding/remote"
    [ -z "$GBT__THEME" ] && GBT__THEME="$GBT__HOME/themes/ssh_prompt"

    GBT__CONF="/tmp/.gbt.$RANDOM"

    echo "export GBT__CONF='$GBT__CONF'" > $GBT__CONF
    cat $GBT__PROFILE >> $GBT__CONF
    echo "$(alias | awk '/gbt_/ {sub(/^(alias )?(gbt___)?/, "", $0); print "alias "$0}')" >> $GBT__CONF
    echo "export GBT__STATUS='$(source $GBT__THEME; GBT_SHELL='bash' GBT_CARS='Status, Custom1' gbt 1)'" >> $GBT__CONF
    echo -n "PS1='" >> $GBT__CONF
    (source $GBT__THEME; gbt | awk '{gsub(/\\\$/, "$"); printf "%s", $0}') >> $GBT__CONF
    echo "'" >> $GBT__CONF

    echo "#!/bin/bash\nbash --rcfile $GBT__CONF" > $GBT__CONF.bash
    chmod +x $GBT__CONF.bash

    echo $GBT__CONF
}

function gbt_docker() {
    [ -z "$GBT__HOME$GBT__PROFILE" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__HOME$GBT__THEME" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__PROFILE" ] && GBT__PROFILE="$GBT__HOME/sources/prompt_forwarding/remote"
    [ -z "$GBT__THEME" ] && GBT__THEME="$GBT__HOME/themes/ssh_prompt"

    local WHICH=$(which $GBT__WHICH_OPTS which 2>/dev/null)
    [ -z $WHICH ] && gbt__err "'which' not found" && return 1
    local DOCKER_BIN=$(which $GBT__WHICH_OPTS docker 2>/dev/null)
    [ $? -ne 0 ] && gbt__err "'docker' not found" && return 1

    if [ "$1" != 'shell' ]; then
        $DOCKER_BIN $@
    else
        local GBT__CONTAINER_ID="${@: -1}"
        local GBT__CONF=$(gbt__local_rcfile)

        $DOCKER_BIN cp $GBT__CONF $GBT__CONTAINER_ID:$(dirname $GBT__CONF)
        $DOCKER_BIN exec ${@:2:$(($# - 2))} -it $GBT__CONTAINER_ID bash --rcfile $GBT__CONF
        $DOCKER_BIN exec ${@:2:$(($# - 2))} -it $GBT__CONTAINER_ID rm -f $GBT__CONF $GBT__CONF.bash

        rm -f $GBT__CONF
        unset GBT__CONF
    fi
}

function gbt_ssh() {
    [ -z "$GBT__HOME$GBT__PROFILE" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__HOME$GBT__THEME" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__PROFILE" ] && GBT__PROFILE="$GBT__HOME/sources/prompt_forwarding/remote"
    [ -z "$GBT__THEME" ] && GBT__THEME="$GBT__HOME/themes/ssh_prompt"

    local WHICH=$(which $GBT__WHICH_OPTS which 2>/dev/null)
    [ -z $WHICH ] && gbt__err "'which' not found" && return 1
    local SSH_BIN=$(which $GBT__WHICH_OPTS ssh 2>/dev/null)
    [ $? -ne 0 ] && gbt__err "'ssh' not found" && return 1

    if [[ " ${GBT__SSH_IGNORE[*]} " == *" ${@: -1} "* ]]; then
        $SSH_BIN $@
    else
        $SSH_BIN -t $@ "
            cat /etc/motd 2>/dev/null;
            export GBT__CONF=\"/tmp/.gbt.$RANDOM\" &&
            echo \"export GBT__CONF='\$GBT__CONF'\" > \$GBT__CONF &&
            echo \"$(base64 $GBT__PROFILE | tr -d '\r\n')\" | base64 -d >> \$GBT__CONF &&
            echo \"$(alias | awk '/gbt_/ {sub(/^(alias )?(gbt___)?/, "", $0); print "alias "$0}')\" >> \$GBT__CONF &&
            echo \"export GBT__STATUS='$(source $GBT__THEME; GBT_SHELL='bash' GBT_CARS='Status, Custom1' gbt 1)'\" >> \$GBT__CONF &&
            echo \"PS1='$(source $GBT__THEME; gbt)'\" >> \$GBT__CONF &&
            bash --rcfile \$GBT__CONF;
            rm -f \$GBT__CONF \$GBT__CONF.bash"
    fi
}

function gbt_su() {
    local WHICH=$(which $GBT__WHICH_OPTS which 2>/dev/null)
    [ -z $WHICH ] && gbt__err "'which' not found" && return 1
    local SU_BIN=$(which $GBT__WHICH_OPTS su 2>/dev/null)
    [ $? -ne 0 ] && gbt__err "'su' not found" && return 1

    local GBT__CONF=$(gbt__local_rcfile)

    $SU_BIN -s "$GBT__CONF.bash" $@

    rm -f $GBT__CONF $GBT__CONF.bash
}

function gbt_sudo() {
    local WHICH=$(which $GBT__WHICH_OPTS which 2>/dev/null)
    [ -z $WHICH ] && gbt__err "'which' not found" && return 1
    local SU_BIN=$(which $GBT__WHICH_OPTS su 2>/dev/null)
    [ $? -ne 0 ] && gbt__err "'su' not found" && return 1
    local SUDO_BIN=$(which $GBT__WHICH_OPTS sudo 2>/dev/null)
    [ $? -ne 0 ] && gbt__err "'sudo' not found" && return 1

    if [ "$1" != 'su' ]; then
        $SUDO_BIN $@
    else
        local GBT__CONF=$(gbt__local_rcfile)

        shift
        $SUDO_BIN $SU_BIN -s "$GBT__CONF.bash" $@
    fi

    rm -f $GBT__CONF $GBT__CONF.bash
}

function gbt_vagrant() {
    [ -z "$GBT__HOME$GBT__PROFILE" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__HOME$GBT__THEME" ] && gbt__err "'GBT__HOME' not defined" && return 1
    [ -z "$GBT__PROFILE" ] && GBT__PROFILE="$GBT__HOME/sources/prompt_forwarding/remote"
    [ -z "$GBT__THEME" ] && GBT__THEME="$GBT__HOME/themes/ssh_prompt"

    local WHICH=$(which $GBT__WHICH_OPTS which 2>/dev/null)
    [ -z $WHICH ] && gbt__err "'which' not found" && return 1
    local VAGRANT_BIN=$(which $GBT__WHICH_OPTS vagrant 2>/dev/null)
    [ $? -ne 0 ] && gbt__err "'vagrant' not found" && return 1

    if [ "$1" != 'ssh' ]; then
        $VAGRANT_BIN $@
    else
        shift
        $VAGRANT_BIN ssh --command "
            cat /etc/motd 2>/dev/null;
            export GBT__CONF=\"/tmp/.gbt.$RANDOM\" &&
            echo \"export GBT__CONF='\$GBT__CONF'\" > \$GBT__CONF &&
            echo \"$(base64 $GBT__PROFILE | tr -d '\r\n')\" | base64 -d >> \$GBT__CONF &&
            echo \"$(alias | awk '/gbt_/ {sub(/^(alias )?(gbt___)?/, "", $0); print "alias "$0}')\" >> \$GBT__CONF &&
            echo \"export GBT__STATUS='$(source $GBT__THEME; GBT_SHELL='bash' GBT_CARS='Status, Custom1' gbt 1)'\" >> \$GBT__CONF &&
            echo \"PS1='$(source $GBT__THEME; gbt)'\" >> \$GBT__CONF &&
            bash --rcfile \$GBT__CONF;
            rm -f \$GBT__CONF \$GBT__CONF.bash" $@
    fi
}
